---
title: "Horror Movie Visualizations"
subtitle: "STA/ISS 313 - Spring 2023 - Project 1"
author: "Viz Villains- Christopher Tsai, Chris Liang, Jason Zhang, Kevin Ordet"
title-slide-attributes:
  data-background-image: images/watercolour_sys02_img34_teacup-ocean.jpg
  data-background-size: stretch
  data-slide-number: none
format: revealjs
editor: visual
execute:
  echo: false
---

```{r load-packages, message = F, include = F, warning = F}

# Add any additional packages you need to this chunk
# Remove any packages from this list that you're not using
library(tidyverse)
library(broom)
library(patchwork)
library(dplyr)
library(knitr)
library(lubridate)
library(ggforce)
library(grid)
library(gridExtra)
library(stringr)
library(tidytext)
library(textdata)
library(cowplot)
library(scales)
```

```{r setup, include = F}
# For better figure resolution
ggplot2::theme_set(ggplot2::theme_minimal(base_size = 14))

# set width of code output
options(width = 65)

#set chunk display
knitr::opts_chunk$set(
  fig.retina = 3, 
  dpi = 300, 
  fig.width = 6, 
  fig.asp = 0.618, 
  out.width = "70%"
  )
```

```{r load-data, include = F, warning = F}
horror_movies <- read.csv("data/horror_movies.csv")
```

```{r mutate-dataset, warning = F}
horror_movies <- horror_movies |>
  mutate(profit = revenue - budget,
         release_date2 = release_date) |>
  separate(release_date2, 
           into = c("release_year", "throwaway"), sep = "-") |>
  mutate(release_date = as.Date(release_date),
         release_year = as.numeric(release_year)) |>
  select(!throwaway)
```

```{r adding-inflation}
inflationdata <- read.csv("data/Dollar_inflation.csv")

# Data on inflation data: https://www.in2013dollars.com/us/inflation/2022?endYear=1950&amount=1

inflationdata <- inflationdata |>
  filter(year != 2023) |>
  rename("release_year" = "year",
         "dollar_adjusted_by1950" = "amount")

horror_new <- left_join(horror_movies, inflationdata, by = "release_year")
```

```{r adjusted-profit}
horror_new <- horror_new |>
  mutate(adj_profit2020 = profit/dollar_adjusted_by1950*12.14,
         adj_profit1950 = profit/dollar_adjusted_by1950,
         adj_budget1950 = budget/dollar_adjusted_by1950,
         adj_budget2020 = budget/dollar_adjusted_by1950*12.14,
         prop_profit = adj_profit2020/adj_budget2020) |>
  filter(adj_budget2020 >= 2000000,
         release_year >= 1980)
```

```{r mutating-levels}
# horror_new |>
#   mutate(size = case_when(adj_budget2020 > 10000000 ~ "huge",
#                           adj_budget2020 > 1000000 ~ "big",
#                           adj_budget2020 > 100000 ~ "medium",
#                           TRUE ~ "small")) |>
#   filter(release_year >= 2000, size!= "small") 
```

# Introduction

## Horror Movie Analysis

-   Question 1: How have trends in factors surrounding horror as a genre (e.g. popularity, budgets, etc) have changed over time?

-   Question 2: Are different subgenres associated with different characteristics (e.g. profitability, sentiment descriptions) within the broader horror genre?

# Question 1 Analysis

## Q1: Movie Releases Over Time

```{r annotated-scatterplot}
description1 <-
  "Horror Movies saw their popularity peak in 2010. Insidious and Paranormal Activity, both released in 2010 saw the highest dollars of profit per dollars of budget of all Horror Movies between 1980 and 2022." |>
  str_wrap(width = 40) #description for annotate

description2 <-
  "7 of the 16 Horror Movies with the biggest profit were released in 1999 or 2000 marking the catalyzation of a decade long growth in the popularity of Horror Movies" |>
  str_wrap(width = 40)

description3 <-
  "Horror Movies saw their popularity peak in 2010. Insidious and Paranormal Activity, both released in 2010 saw the highest dollars of profit per dollars of budget of all Horror Movies between 1980 and 2022." |> 
  str_wrap(width=40)

description2 <-
  "7 of the 16 Horror Movies with the biggest profit were released in 1999 or 2000 marking the catalyzation of a decade long growth in the popularity of Horror Movies" |> 
  str_wrap(width=40)

description3 <-
  "Number of Horror Movies released in 2020 drastically decreases, likely due to COVID-19. The ability to make movies and the number of possible audience members decreased." |> 
  str_wrap(width=40)

plot_circle_purple <- horror_new |>
  group_by(release_year) |>
  summarise(count = n()) |>
  filter(release_year == 2009 |
           release_year == 2010) #create dataset for circles around plot points of note

plot_circle_blue <- horror_new |>
  group_by(release_year) |>
  summarise(count = n()) |>
  filter(release_year == 1999 | release_year == 2000)

plot_circle_black <- horror_new |>
  group_by(release_year) |>
  summarise(count = n()) |>
  filter(release_year == 2019 | release_year == 2020)

horror_new |>
  group_by(release_year) |>
  summarise(count = n()) |>
  ggplot(aes(x = release_year, y = count)) +
  geom_point(size = 1) +
  geom_point(
    data = plot_circle_purple,
    pch = 21,
    size = 5,
    colour = "purple"
  ) +
  geom_point(
    data = plot_circle_blue,
    pch = 21,
    size = 5,
    colour = "deepskyblue4"
  ) +
  geom_point(
    data = plot_circle_black,
    pch = 21,
    size = 5,
    colour = "black"
  ) + #adds circle around plot points of note
  annotate(
    "label",
    x = 2000,
    y = 67,
    label = description1,
    alpha = 0.6,
    size = 2.3,
    color = "purple"
  ) + #adds the annotation with the text in the same color as the annotation of note
  annotate(
    "label",
    x = 1995,
    y = 40,
    label = description2,
    alpha = 0.6,
    size = 2.3,
    color = "deepskyblue4"
  ) +
  geom_ellipse(aes(
    x0 = 2019.6,
    y0 = 30.7,
    a = 11.3,
    b = 1,
    angle =  -1.45 * pi / 3
  ),
  color = "black") + #draws an ellipse around the 2019 and 2020 points
  annotate(
    "label",
    x = 2012,
    y = 20,
    label = description3,
    alpha = 0.8,
    size = 2.3
  ) +
  labs(
    title = "How the number of horror movies launched for \ntheatrical release changed over time",
    subtitle = "From 1980-2020",
    x = "Year",
    y = "Number of Horror Movies",
    color = "Language"
  ) +
  theme(
    legend.key.size = unit(3, 'cm'),
    #change legend key size
    legend.key.height = unit(3, 'cm'),
    #change legend key height
    legend.key.width = unit(3, 'cm'),
    #change legend key width
    plot.title = element_text(size = 12),
    #increases size of plot title
    plot.subtitle = element_text(size = 10),
    axis.title = element_text(size = 10)
  ) +
  scale_color_discrete(labels = c('English', 'Other')) #changes the names on the legends
```

## Q1: Characteristics: English and Non-English

```{r annotated-by-year, message = FALSE, warning = FALSE}
description1 <-
  "9/11- Terrorist crash a plane into the World Trade Center. Questions about American security arise" |>
  str_wrap(width = 40) #description to put in annotation

description2 <-
  "The stock market crashes in 2009. Questions about American economic security arise." |>
  str_wrap(width = 40)

description2 <-
  "The stock market crashes in 2009. Questions about American economic security arise." |> 
  str_wrap(width=40)

horror_new |>
  mutate(en_language = ifelse(original_language == "en", "en", "non-en")) |>
  group_by(release_year, en_language) |>
  summarise(count = n()) |>
  ggplot(aes(x = release_year, y = count, color = en_language)) + #adds different line plot based on the language the movie was in
  geom_point(alpha = 0.3) +
  geom_line(alpha = 0.3) +
  geom_smooth(se = FALSE) +
  geom_segment(
    x = 2001,
    xend = 2001,
    y = -5,
    yend = 27,
    col = "black",
    linewidth = 1.5
  ) + #adds vertical line at 2001
  geom_segment(
    x = 2009,
    xend = 2009,
    y = -5,
    yend = 45,
    col = "black",
    linewidth = 1.5
  ) +
  annotate(
    "label",
    x = 1995,
    y = 35,
    label = description1,
    alpha = 0.6,
    size = 2.3
  ) +
  annotate(
    "label",
    x = 2015.5,
    y = 51,
    label = description2,
    alpha = 0.6,
    size = 2.3
  ) +
  labs(
    title = "Uncertainty and Anxiety- \nHow Horror Flicks Popularity Correlates with a 
Need for an Outlet of Fears",
    x = "Year",
    y = "Total Number of Movies for Theatrical Release",
    color = "Language"
  ) +
  theme(
    legend.key.size = unit(0.25, 'cm'),
    legend.key.height = unit(0.35, 'cm'),
    legend.key.width = unit(0.25, 'cm'),
    plot.title = element_text(size = 12),
    axis.title = element_text(size = 10)
  ) +
  scale_color_discrete(labels = c('English', 'Other'))
```

## Q1: Total Profit And Budget Over Time

```{r total-budgets-profits, message = F}
horror_summary <- horror_new |>
  group_by(release_year) |>
  summarise(total_budget = sum(adj_budget2020),
            total_profit = sum(adj_profit2020),
            count = n())


p1 <- horror_summary |>
  ggplot(aes(x = release_year, y = total_budget)) +
  #geom_point(aes(col = "Total Budget"), alpha=0.1) +
  geom_line(aes(col = "Total Budget"), alpha=0.1, linewidth = 1) +
  geom_smooth(se = FALSE, aes(col = "Total Budget"), linewidth = 3, span=0.4) +
  #geom_point(aes(y = total_profit, col = "Total Profit"), alpha=0.1) +
  geom_line(aes(y = total_profit, col = "Total Profit"), alpha=0.1, linewidth=1) +
  geom_smooth(aes(y = total_profit, col = "Total Profit"),
              se = FALSE, linewidth=3, span=0.4) +
  scale_color_manual(name='',
                     breaks=c('Total Profit', 'Total Budget'),
                     values=c('Total Profit'='navy', 'Total Budget'='lightblue')) +
  scale_size(range = c(1, 15)) +
  theme_minimal() +
  theme(legend.position = c(0.1, 0.9),
        legend.spacing.y = unit(0.2, 'cm'),
        #legend.key.size = unit(3, 'cm'), #change legend key size
        #legend.key.height = unit(3, 'cm'), #change legend key height
        #legend.key.width = unit(3, 'cm'),
        plot.title = element_text(size=18),
        plot.subtitle = element_text(size=14),
        axis.title=element_text(size=14),
        axis.title.x = element_blank()) +
  labs(
    #title = "Starting in 2007, Movie Directors realized they didn't need big #budgets to garner an audience for their movies",
       y = "Dollars (2020 adjusted)",
       #subtitle = "While total budget decreased, total profit continued to #increase"
       )



p2 <- horror_summary |>
  ggplot(aes(x = release_year, y = count)) +
  geom_col() +
  theme_minimal()  +
  labs(y = "Number of movies",
       x = "Year"
       )

grid.arrange(p1, p2, nrow=2, heights=c(4, 2))
grid.rect(width = .99, height = .99, gp = gpar(lwd = 2, col = "gray", fill = NA))

```


# Question 2 Analysis

Are different subgenres associated with different characteristics (e.g. profitability, descriptions) within the broader horror genre?

```{r size-mutate}
# horror_new |>
#   mutate(size = case_when(adj_budget2020 > 10000000 ~ "huge",
#                           adj_budget2020 > 1000000 ~ "big",
#                           adj_budget2020 > 100000 ~ "medium",
#                           TRUE ~ "small")) |>
#   filter(release_year >= 2000, size!= "small") |>
#   group_by(release_year, size) |>
#   summarise(count = n(), total = sum(adj_budget2020)) |>
#   ggplot(aes(x=release_year, y = count, color=size, fill=size)) +
#   geom_col()
```

```{r mutating-horror-2}
#pivoting longer with separate_rows
horror_new2 <- horror_new |>
  separate_rows(genre_names, sep = ",\\s+")

#popular genres
popular_genre_names <- horror_new2 |>
  group_by(genre_names) |>
  summarise(n = n()) |>
  mutate(prop = n / sum(n)) |>
  arrange(desc(prop)) |>
  head(6)
```

## Q2: Subgenres and Profitability

```{r profitability-plots}
horror_new2_1 <- horror_new2 |>
  filter(genre_names %in% popular_genre_names$genre_names) |>
  mutate(en_language = ifelse(original_language == "en", "English", "Non-English")) |>
  mutate(profit = case_when(adj_profit2020 < 0 ~ "Unprofitable",
                            adj_profit2020 >= 0 & adj_profit2020 < adj_budget2020 ~ "Profitable",
                            adj_profit2020 >= adj_budget2020 ~ "Very Profitable")) |>
  mutate(profit = fct_relevel(profit, c("Very Profitable", "Profitable", "Unprofitable")),
         genre_names = fct_relevel(genre_names, c("Horror", "Action", "Science Fiction", "Drama", "Thriller", "Mystery")))


#plot 1 
ggplot(horror_new2_1, aes(y = genre_names, fill = profit)) +
  geom_bar(position = "fill") +
  scale_y_discrete(limits = rev) +
  labs(title = "Differences in Profitabilty Between Subgenres",
       subtitle = "for Horror Movies",
       x = "Proportion",
       y = "Subgenre",
       fill = "Profit Level") +
  scale_fill_manual(values = c("navy", "steelblue1", "lightblue"))  +
  theme(plot.title = element_text(hjust = 0.5)) +
  theme(plot.subtitle = element_text(hjust = 0.5))
```

## Q2: Subgenres and Profitability by Language

```{r profitability-plot-2}
ggplot(horror_new2_1, aes(y = genre_names, fill = profit)) +
  geom_bar(position = "fill") +
  facet_wrap(. ~ en_language, ncol = 1) +
  scale_y_discrete(limits = rev)+
  labs(title = "Differences in Profitabilty Between Subgenres",
       subtitle = "for Horror Movies, by Language",
       x = "Proportion",
       y = "Subgenre",
       fill = "Profit Level") +
  scale_fill_manual(values = c("navy", "steelblue1", "lightblue")) +
  theme(plot.title = element_text(hjust = 0.5)) +
  theme(plot.subtitle = element_text(hjust = 0.5))
```

## Q2: Sentiment Analysis by Subgenre with BING Lexicon

```{r sentiment_data, message = FALSE, warning = FALSE}
sentiment_horror <- horror_new2 |>
  select(title, genre_names, tagline) |>
  separate(tagline, into = paste0("word", 1:20), sep = " ") |>
  pivot_longer(cols = starts_with("word"), 
               names_to = "word_number", 
               values_to = "word") |>
  drop_na(word)

#create two dataframes based on different sentiment lexicons
sentiment_joined <- sentiment_horror |>
  inner_join(get_sentiments("bing"))

sentiment_afinn <- sentiment_horror |>
  inner_join(get_sentiments("afinn"))

afinn_summary <- sentiment_afinn |>
  group_by(title) |>
  summarise(averagesent = mean(value))

newsentiment <- horror_new2 |>
  inner_join(afinn_summary, by = c("title"))
```

```{r sentiment-plots, warning = F, message = F}
notstacked <- sentiment_joined |>
  group_by(genre_names, sentiment) |>
  filter(genre_names %in% popular_genre_names$genre_names) |>
  summarise(count = n()) |>
  ggplot(aes(x = fct_reorder(genre_names, count), y = count, fill = sentiment)) +
  geom_bar(stat = "identity") +
  scale_fill_manual(values = c("navy", "steelblue1"),
                    labels = c("Negative", "Positive")) +
  theme(legend.position = "top") +
  labs(x = "Genres", y = "Count of Negative/Positive Scores \n by BING Lexicon",
       title = "The Sentiment of Words in Horror Movie Taglines",
       subtitle = "Counted for each word, by genre",
       fill = "Sentiment",
       caption = "The BING Lexicon produces \n negative or positive for a word")

notstacked
```
## Q2 Sentiment by Proportion with BING Lexicon
```{r stacked, warning = FALSE, message = F}
stacked <- sentiment_joined |>
  group_by(genre_names, sentiment) |>
  filter(genre_names %in% popular_genre_names$genre_names) |>
  summarise(count = n()) |>
  ggplot(aes(x = fct_reorder(genre_names, count), y = count, fill = sentiment)) +
  geom_bar(stat = "identity", position = "fill") +
  scale_fill_manual(values = c("navy", "steelblue1"),
                    labels = c("Negative", "Positive")) + 
  theme(legend.position = "top") +
  labs(x = "Genres",
       y = "Proportion of \n Positive/Negatives",
       title = "The Sentiment of Words in Horror Movie Taglines",
       subtitle = "Neg/Pos proportion of sentiments by genre",
       fill = "Sentiment",
       caption = "The BING Lexicon produces \n negative or positive for a word")

stacked
```

## Q2: Sentiment by Subgenre by AFINN Lexicon 
```{r boxplot-sentiments}
newsentiment |>
  filter(genre_names %in% popular_genre_names$genre_names) |>
  ggplot(aes(x = fct_reorder(genre_names, averagesent), y = averagesent,
             fill = genre_names)) +
  geom_boxplot(show.legend = FALSE, color = "darkblue") +
  coord_flip() +
  scale_fill_manual(
    values = c("lightslateblue","steelblue3","steelblue1","dodgerblue","cornflowerblue","lightskyblue")) +
  labs(y = "Average Sentiment Score for Words in a Movie Tagline",
       x = "Genre or Subgenre",
       title = "AFINN Sentiment Score of Movie Taglines",
       subtitle = "By Genre of Movie",
       caption = "AFINN Score: Measure of positive/negative \n sentiment, from -5 to 5") +
  theme(
    plot.title = element_text(size = 20),
    plot.subtitle = element_text(size = 18),
    axis.title = element_text(size = 18))
```

```{r boxplotsentiments}
# newsentiment |>
#   filter(genre_names %in% popular_genre_names$genre_names) |>
#   ggplot(aes(x = fct_reorder(genre_names, averagesent), y = averagesent,
#              fill = genre_names)) +
#   geom_boxplot(show.legend = FALSE, color = "darkblue") +
#   coord_flip() +
#   scale_fill_manual(
#     values = c("lightslateblue","steelblue3","steelblue1","dodgerblue","cornflowerblue","lightskyblue")) +
#   labs(y = "Average Sentiment Score for Words in a Movie Tagline",
#        x = "Genre or Subgenre",
#        title = "AFINN Sentiment Score of Movie Taglines",
#        subtitle = "By Genre of Movie",
#        caption = "AFINN Score: Measure of positive/negative \n sentiment, from -5 to 5") +
#   theme(
#     plot.title = element_text(size = 20),
#     plot.subtitle = element_text(size = 18),
#     axis.title = element_text(size = 18))
```

